[Ex1]

- 변수 선언을 할 때 :: Int 를 통해 Int 타입임을 명시하였다.


[Ex2]

- x를 받아 x * 2 한 값을 반환하는 함수를 작성하였다.



[Ex3]

- 문제 2번의 double 함수를 이용하여 전달받은 인자에 4를 곱한 값을 반환하는 함수를 작성하였다.
  double 함수에 double x를 전달해서 총 결과는 (x * 2) * 2 로, 4번 곱한 값을 반환한다.

[Ex4]

- x1, y1, x2, y2를 입력받아 두 점의 거리를 계산하는 함수 distance를 작성하였다.
  sqrt 함수를 통해 두 점 사이의 거리 공식 사용해 점의 거리를 계산하였다. 


[Ex5]

- 인자를 조건문과 even 함수를 통해 짝수인지 확인하여 짝수면 "eeny", 
    그렇지 않으면 "meeny"를 반환하는 함수를 계산하였다.



[Ex6]

- || 연산자를 사용해 password가 "swordfish" 혹은 "mellon"이면 통과하도록 작성하였다.



[Ex7]

- 조건문을 사용해 g가 500 이하인 경우 250, 
    500 초과 5000 이하인 경우 300 + g, 
    5000을 초과한 경우 6000을 반환하도록 작성하였다.


[Ex8]

- Zero의 타입을 Int -> Bool에서 Integer로 변경하였다.
  패턴 매칭을 사용해 0인 경우 True, 그 이외 모든 수(_)은 False를 반환하도록 작성하였다.


[Ex9]

- 인자 n을 받아 1부터 n까지 더한 값을 반환한다. 재귀함수를 사용한다.
  패턴 매칭을 사용하여 n이 1일 때는 1을 반환한다.
  그렇지 않으면 n에 sumTo (n-1)을 더해 전체 합을 구한다.

[Ex10]

- 인자 n과 k를 받아 n의 k제곱을 반환한다. 재귀함수를 사용한다.
  패턴 매칭을 사용하여 ,k가 0이 아닌 경우에는 n에 power n (k-1) 값을 곱하여 결과를 구한다.
  k가 0이 된 경우 1을 반환한다 (0제곱 = 1)


[Ex11]

- 인자 n을 받아 3으로 얼마나 나눌 수 있는지를 반환한다. 재귀함수를 사용한다.
  n이 0이 아닌 경우에는 1을 더하고, n을 3으로 나눈 값으로 다시 나눗셈을 반복한다.
  받은 인자가 0인 경우 (= 더이상 3으로 나눌 수 없는 경우) 0을 반환하고 함수를 종료한다.